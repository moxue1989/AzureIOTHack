@model TrainModel

@{
    ViewData["Title"] = "Train";
}


<h4 class="text-info text-center">Train your own face into the Facial Recognition Algorithm:</h4>
<div class="well">
    <p class="text-warning">
        - Enter a nick name and take a few (3-4) snapshots with the capture button or upload some images of your face (Only one face per image Please)
    </p>
    <p class="text-warning">
        - Select "Train" to add your face to the algorithm. The detect function on the home page should be able to recognize you now.
    </p>
</div>
<div class="row">
    <div class="col-md-6">
        <video id="video" class="center-block" autoplay></video>
        <canvas id="canvas" hidden></canvas>
        <br />
        <button class="btn-block btn-lg btn-success" onclick="capture()">Capture</button>
    </div>
    <div class="col-md-6">
        <form asp-action="Train" enctype="multipart/form-data">
            <div class="form-group">
                <label asp-for="Name">Enter Nick Name:</label>
                <input name="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div id="webCamImages">
                <label>Webcam Images</label>
            </div>
            <div class="form-group" id="Base64Images">
                <span asp-validation-for="Base64Images" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Uploaded Images</label>
                <input type="file" name="UploadedImages" class="form-control" multiple />
                <span asp-validation-for="UploadedImages" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Train Model" class="btn-lg btn-danger btn-block" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    var constraints = {
        audio: false,
        video: { width: 640, height: 480 }
    };
    navigator.mediaDevices.getUserMedia(constraints)
        .then(success)
        .catch(error);

    function success(stream) {
        var video = document.getElementById('video');
        video.srcObject = stream;
    }

    function error(errorMsg) {
        console.log(errorMsg);
    }

    function capture() {
        var video = document.getElementById('video');
        var canvas = document.createElement('canvas');
        canvas.width = 640;
        canvas.height = 480;
        var context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, 640, 480);

        var imageInput = $('#Base64Images');
        var webcamImages = $('#webCamImages');
        var dataUrl = canvas.toDataURL();
        dataUrl = dataUrl.replace(/^data:image\/(png|jpg);base64,/, "");

        var inputElement = document.createElement('input');
        var input = $(inputElement);
        input.attr('name', "Base64Images");
        input.hide();
        input.val(dataUrl);
        var canvas2 = document.createElement('canvas');
        var context2 = canvas2.getContext('2d');
        context2.scale(0.4, 0.4);
        context2.drawImage(canvas, 0, 0);
        imageInput.append(canvas2);
        webcamImages.append(input);
    }
</script>